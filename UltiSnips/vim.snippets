snippet func
function ${1:name}() abort
	${0}
endfunction
endsnippet

snippet box0
" ==============================================================================
" ${0}
" ==============================================================================
endsnippet

snippet box1
" ------------------------------------------------------------------------------
" ${0}
" ------------------------------------------------------------------------------
endsnippet

snippet try
try
${0}
catch /^Vim\%((\a\+)\)\=:E123:/ " catch error E123

finally

endtry
endsnippet

snippet whilei
let ${1:index} = 0
while $1 != ${2:size}
	${0}
	let $1 += 1
endwhile
endsnippet

snippet whileiz
let [${1:index}, size] = [0, len(${2:something})]
while $1 != size
	${0}
	let $1 += 1
endwhile
endsnippet

snippet while
while ${0}
endwhile
endsnippet

# add trailing r to use retular expression style trigger_word
snippet '(\b\w+\b)\.iter' "loop list" r
for _, ${1:`!p snip.rv = match.group(1)[:-1]`} := range `!p snip.rv = match.group(1)` {
	${0}
}
endsnippet

snippet guard
if exists('b:${1:loaded}')
	finish
endif
let b:$1 = 1

endsnippet

snippet prg
!This is file : `!v expand('%:t:r')`
! Author= `!v $USER`
! Started at: `date +%d.%m.%y`
! Last Modified : Sun 16 Jun 2019 12:30:58 IST
!
Program  ${1:<++`!v expand('%:t:r')`}
Implicit None
${2}
End Program  ${1/([^\n$]+).*/$1/}
endsnippet
